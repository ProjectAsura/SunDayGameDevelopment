//-----------------------------------------------------------------------------
// File : Gimmick.cpp
// Desc : Gimmick Object.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cassert>
#include <Gimmick.h>
#include <GameMap.h>


///////////////////////////////////////////////////////////////////////////////
// Gimmick class
///////////////////////////////////////////////////////////////////////////////

//-----------------------------------------------------------------------------
//      タイル番号から位置を設定します.
//-----------------------------------------------------------------------------
Gimmick& Gimmick::SetTilePos(int tileX, int tileY)
{
    m_Box.Pos.x = kMarginX + kTileSize * tileX;
    m_Box.Pos.y = kMarginY + kTileSize * tileY;
    return *this;
}

//-----------------------------------------------------------------------------
//      サイズを設定します.
//-----------------------------------------------------------------------------
Gimmick& Gimmick::SetSize(int w, int h)
{
    m_Box.Size.x = w;
    m_Box.Size.y = h;
    return *this;
}

//-----------------------------------------------------------------------------
//      テクスチャを設定します.
//-----------------------------------------------------------------------------
Gimmick& Gimmick::SetSRV(ID3D11ShaderResourceView* pSRV)
{
    m_pSRV = pSRV;
    return *this;
}

//-----------------------------------------------------------------------------
//      状態をリセットします.
//-----------------------------------------------------------------------------
void Gimmick::Reset()
{ /* DO_NOTHING */ }

//-----------------------------------------------------------------------------
//      更新処理を行います.
//-----------------------------------------------------------------------------
void Gimmick::Update(UpdateContext& context)
{ /* DO_NOTHING */ }

//-----------------------------------------------------------------------------
//      プレイヤーが移動可能かチェックします.
//-----------------------------------------------------------------------------
bool Gimmick::CanMove(const Box& playerBox)
{ return !IsHit(playerBox, m_Box); }

//-----------------------------------------------------------------------------
//      描画処理を行います.
//-----------------------------------------------------------------------------
void Gimmick::Draw(SpriteSystem& sprite, int layer)
{ sprite.Draw(m_pSRV, m_Box, layer); }

//-----------------------------------------------------------------------------
//      バウンディングボックスを取得します.
//-----------------------------------------------------------------------------
Box Gimmick::GetBox() const
{ return m_Box; }

