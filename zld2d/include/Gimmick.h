//-----------------------------------------------------------------------------
// File : Gimmick.h
// Desc : Gimmick Object.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d11.h>
#include <Box.h>
#include <UpdateContext.h>
#include <SpriteSystem.h>
#include <DirectionState.h>
#include <MessageMgr.h>


///////////////////////////////////////////////////////////////////////////////
// Gimmick class
///////////////////////////////////////////////////////////////////////////////
class Gimmick : public IMessageListener
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Gimmick();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    virtual ~Gimmick();

    //-------------------------------------------------------------------------
    //! @brief      タイル番号から位置を設定します.
    //-------------------------------------------------------------------------
    Gimmick& SetTilePos(int tileX, int tileY);

    //-------------------------------------------------------------------------
    //! @brief      サイズを設定します.
    //-------------------------------------------------------------------------
    Gimmick& SetSize(int w, int h);

    //-------------------------------------------------------------------------
    //! @brief      テクスチャを設定します.
    //-------------------------------------------------------------------------
    Gimmick& SetSRV(ID3D11ShaderResourceView* pSRV);

    //-------------------------------------------------------------------------
    //! @brief      状態をリセットします.
    //-------------------------------------------------------------------------
    virtual void Reset();

    //-------------------------------------------------------------------------
    //! @brief      更新処理を行います.
    //-------------------------------------------------------------------------
    virtual void Update(UpdateContext& context);

    //-------------------------------------------------------------------------
    //! @brief      プレイヤーが移動可能かチェックします.
    //! 
    //! @retval true    移動可能です.
    //! @retval false   移動不可能です.
    //-------------------------------------------------------------------------
    virtual bool CanMove(const Box& playerBox);

    //-------------------------------------------------------------------------
    //! @brief      描画処理を行います.
    //-------------------------------------------------------------------------
    virtual void Draw(SpriteSystem& sprite, int layer);

    //-------------------------------------------------------------------------
    //! @brief      バウンディングボックスを取得します.
    //-------------------------------------------------------------------------
    Box GetBox() const;

    //-------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //-------------------------------------------------------------------------
    ID3D11ShaderResourceView* GetSRV() const;

protected:
    //=========================================================================
    // protected variables.
    //=========================================================================
    Box                         m_Box;
    ID3D11ShaderResourceView*   m_pSRV   = nullptr;
    uint8_t                     m_Flags  = 0;
    asdx::Vector2               m_Scroll = asdx::Vector2(0.0f, 0.0f);

    //=========================================================================
    // protected methods.
    //=========================================================================
    void OnScroll(const Message& msg);
    void OnScrollCompleted();
};
